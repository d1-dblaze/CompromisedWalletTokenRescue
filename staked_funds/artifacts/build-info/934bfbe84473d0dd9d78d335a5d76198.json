{
  "id": "934bfbe84473d0dd9d78d335a5d76198",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.7",
  "solcLongVersion": "0.8.7+commit.e28d00a7",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Interfaces.sol": {
        "content": "pragma solidity 0.8.7;\n\n\nstruct StakingInfo{\n    address owner;\n    uint256 tickets;\n    uint256 validity;\n}\n\ninterface Ivlaunch{    \n    function buyAndClaimTickets(StakingInfo calldata info_, bytes memory sig_) external;\n    function transfer(address to, uint value) external;\n\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 2000
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/Interfaces.sol": {
        "Ivlaunch": {
          "abi": [
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tickets",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "validity",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct StakingInfo",
                  "name": "info_",
                  "type": "tuple"
                },
                {
                  "internalType": "bytes",
                  "name": "sig_",
                  "type": "bytes"
                }
              ],
              "name": "buyAndClaimTickets",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "buyAndClaimTickets((address,uint256,uint256),bytes)": "0e53f233",
              "transfer(address,uint256)": "a9059cbb"
            }
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Interfaces.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/Interfaces.sol",
          "start": -1
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/Interfaces.sol": {
        "ast": {
          "absolutePath": "contracts/Interfaces.sol",
          "exportedSymbols": {
            "Ivlaunch": [
              24
            ],
            "StakingInfo": [
              8
            ]
          },
          "id": 25,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:22:0"
            },
            {
              "canonicalName": "StakingInfo",
              "id": 8,
              "members": [
                {
                  "constant": false,
                  "id": 3,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "57:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 8,
                  "src": "49:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "49:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "tickets",
                  "nameLocation": "76:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 8,
                  "src": "68:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "68:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "validity",
                  "nameLocation": "97:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 8,
                  "src": "89:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "89:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "name": "StakingInfo",
              "nameLocation": "32:11:0",
              "nodeType": "StructDefinition",
              "scope": 25,
              "src": "25:83:0",
              "visibility": "public"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 24,
              "linearizedBaseContracts": [
                24
              ],
              "name": "Ivlaunch",
              "nameLocation": "120:8:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "0e53f233",
                  "id": 16,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "buyAndClaimTickets",
                  "nameLocation": "147:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 14,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "info_",
                        "nameLocation": "187:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "166:26:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingInfo_$8_calldata_ptr",
                          "typeString": "struct StakingInfo"
                        },
                        "typeName": {
                          "id": 10,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9,
                            "name": "StakingInfo",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 8,
                            "src": "166:11:0"
                          },
                          "referencedDeclaration": 8,
                          "src": "166:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingInfo_$8_storage_ptr",
                            "typeString": "struct StakingInfo"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 13,
                        "mutability": "mutable",
                        "name": "sig_",
                        "nameLocation": "207:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "194:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 12,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "194:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "165:47:0"
                  },
                  "returnParameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "221:0:0"
                  },
                  "scope": 24,
                  "src": "138:84:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a9059cbb",
                  "id": 23,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "236:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 21,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 18,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "253:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 23,
                        "src": "245:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "245:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 20,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "262:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 23,
                        "src": "257:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "257:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "244:24:0"
                  },
                  "returnParameters": {
                    "id": 22,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "277:0:0"
                  },
                  "scope": 24,
                  "src": "227:51:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 25,
              "src": "110:171:0",
              "usedErrors": []
            }
          ],
          "src": "0:281:0"
        },
        "id": 0
      }
    }
  }
}
